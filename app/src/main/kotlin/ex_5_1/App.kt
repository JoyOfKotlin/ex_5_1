/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package ex_5_1

sealed class List<A> {
    abstract fun isEmpty(): Boolean
	fun cons(a: A): List<A> = Cons(a, this)
	
	fun setHead(a: A): List<A> = when (this) {
		Nil -> throw IllegalStateException ("setHead called on an empty list")
		is Cons -> tail.cons(a)
	}

	

    private object Nil : List<Nothing>() {
        override fun isEmpty() = true
        override fun toString(): String = "[NIL]"
    }

	private class Cons<A>(val head: A, val tail: List<A>) : List<A>() {
        override fun isEmpty() = false
        override fun toString(): String = "[${toString("",this)}NIL]"
        private tailrec fun toString(acc: String, list: List<A>): String = when (list) {
                is Nil -> acc
                is Cons -> toString("$acc${list.head}, ", list.tail)
            }
    }

    companion object {
        operator
        fun <A> invoke(vararg az: A): List<A> =
                az.foldRight(Nil as List<A>) { a: A, list: List<A> -> Cons(a, list) }
    }
}


class App {
    val greeting: String
        get() {
            return "ex_5_1"
        }
}

fun main() {
    println(App().greeting)
    var  list : List<Int> =List(10,1,2,3)
    println(List(1,2,3))
	println(List(1,2,3).cons(10))
	println(list.setHead(0))
}
